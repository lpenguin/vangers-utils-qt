# Borrowed from https://github.com/mapeditor/tiled/blob/master/.github/workflows/packages.yml

name: Build Packages

on:
  push:
    tags:
    - '*'
    branches:
    - 'actions'
env:
  QBS_VERSION: 1.20.1
  VANGERS_UTILS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}
  VANGERS_UTILS_SNAPSHOT: ${{ !startsWith(github.ref, 'refs/tags/v') }}

jobs:
  version:
    name: Determine VangersUtils version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      release: ${{ steps.get-version.outputs.release }}

    steps:
    - name: Get version
      id: get-version
      run: |
        if [[ "$VANGERS_UTILS_RELEASE" == 'true' ]]; then echo "::set-output name=version::${GITHUB_REF:11}" ; fi
        if [[ "$VANGERS_UTILS_RELEASE" != 'true' ]]; then echo "::set-output name=version::$(date "+%Y.%m.%d")" ; fi
        echo "::set-output name=release::${VANGERS_UTILS_RELEASE}"
  linux:
    name: Linux (AppImage)
    runs-on: ubuntu-18.04
    needs: version

    env:
      VANGERS_UTILS_VERSION: ${{ needs.version.outputs.version }}

    steps:
    - name: "Set environmental variables"
      run: |
        echo "QBS_DIR=${{ github.workspace }}/qbs-linux-x86_64-${{ env.QBS_VERSION }}/" >> $GITHUB_ENV
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        host: linux
        target: desktop
        version: 5.15.2


    - name: Install Qbs
      run: |
        echo QBS_VERSION: $QBS_VERSION
        wget -c "https://download.qt.io/official_releases/qbs/$QBS_VERSION/qbs-linux-x86_64-$QBS_VERSION.tar.gz" -O ${{ github.workspace }}/qbs-linux-x86_64-$QBS_VERSION.tar.gz
        tar xfz ${{ github.workspace }}/qbs-linux-x86_64-$QBS_VERSION.tar.gz -C ${{ github.workspace }}
    - name: Setup Qbs
      run: |
        echo Qt5_DIR: $Qt5_DIR
        $QBS_DIR/bin/qbs --version 
        $QBS_DIR/bin/qbs setup-qt $Qt5_DIR/bin/qmake vangers
        $QBS_DIR/bin/qbs config defaultProfile vangers
        $QBS_DIR/bin/qbs setup-toolchains --detect
    - name: Build VangersUtils
      run: |
        $QBS_DIR/bin/qbs install --install-root VangersUtils config:release qbs.installPrefix:/usr qbs.debugInformation:true modules.cpp.separateDebugInformation:true
    
    - name: Build AppImage
      run: |
        wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -O linuxdeployqt
        chmod a+x linuxdeployqt
        ./linuxdeployqt ./VangersUtils/usr/share/applications/com.lpenguin.vangers-utils.desktop -bundle-non-qt-libs -verbose=2 -appimage
        ls ./squashfs-root/usr/bin || true
        mv Vangers_Utils-*-x86_64.AppImage VangersUtils-$VANGERS_UTILS_VERSION-x86_64.AppImage
  
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: VangersUtils-*x86_64.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # macos:
  #   name: macOS
  #   runs-on: macos-latest
  #   needs: version

  #   env:
  #     TILED_VERSION: ${{ needs.version.outputs.version }}

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Install Qt
  #     run: |
  #       sudo ./dist/install-qt.sh --version ${QT_VERSION} qtbase qtdeclarative qtscript qtsvg qtimageformats qttools | tee -a $GITHUB_PATH
  #       sudo ./dist/install-qt.sh --version ${QTCREATOR_VERSION} qtcreator | tee -a $GITHUB_PATH
  #   - name: Setup Qbs
  #     run: |
  #       qbs setup-toolchains --detect
  #       qbs config defaultProfile xcode
  #   - name: Build Zstandard
  #     run: |
  #       git clone --depth 1 -b master https://github.com/facebook/zstd.git
  #       pushd zstd/lib
  #       make libzstd.a
  #       popd
  #   - name: Build Tiled
  #     run: |
  #       qbs install --install-root install config:release qbs.installPrefix:"" projects.Tiled.enableZstd:true
  #   - name: Package
  #     run: |
  #       macdeployqt install/Tiled.app -verbose=2
  #       pushd install
  #       ruby ../dist/macos/fixup-install-names.rb
  #       ditto -c -k --sequesterRsrc --keepParent Tiled.app ../Tiled-macos.zip
  #       popd
  #   - name: Upload Tiled.app
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: Tiled-macos.app
  #       path: Tiled-macos.zip

  windows:
    name: Windows (${{ matrix.arch }}-bit)
    runs-on: windows-latest
    needs: version

    strategy:
      matrix:
        include:
        # - arch: 32
          # openssl_arch: x86
        - arch: 64
          openssl_arch: x64

    env:
      QT_VERSION: 5.15.2
      QTCREATOR_VERSION: 5.0.3
      VANGERS_UTILS_VERSION: ${{ needs.version.outputs.version }}
      QT_TOOLCHAIN: win${{ matrix.arch }}_mingw81
      MINGW_VERSION: 8.1.0
      MINGW_COMPONENT: win${{ matrix.arch }}_mingw810

    defaults:
      run:
        shell: bash

    steps:

    - name: "Set environmental variables"
      run: |
        echo "QBS_DIR=$PWD/qbs-windows-x86_64-${{ env.QBS_VERSION }}/" >> $GITHUB_ENV
    - name: Checkout repository
      uses: actions/checkout@v2

    # - name: Install Qt
    #   run: |
    #     echo "QT_PATH=$(./dist/install-qt.sh --version ${QT_VERSION} --toolchain ${QT_TOOLCHAIN} qtbase qtdeclarative qtscript qtsvg qtimageformats qttools qttranslations)" | tee -a  $GITHUB_ENV
    #     echo "MINGW_PATH=$(./dist/install-qt.sh --version ${MINGW_VERSION} ${MINGW_COMPONENT})" | tee -a  $GITHUB_ENV

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        host: windows
        target: desktop
        version: 5.15.2
        arch: win64_mingw81
        dir: '${{ github.workspace }}/qt5dir/'

    - name: Install Qbs
      run: |
        echo QBS_VERSION: $QBS_VERSION
        echo QBS_DIR: $QBS_DIR        
        curl -o ./qbs-windows-x86_64-$QBS_VERSION.zip -L "https://download.qt.io/official_releases/qbs/$QBS_VERSION/qbs-windows-x86_64-$QBS_VERSION.zip"
        ls -lah
        unzip ./qbs-windows-x86_64-$QBS_VERSION.zip -d $QBS_DIR/
        ls -lah
    # - name: Setup Qbs
    #   run: |
    #     qbs setup-toolchains ${MINGW_PATH}/*-w64-mingw32-gcc.exe mingw
    #     qbs setup-qt ${QT_PATH}/qmake.exe qt
    #     qbs config defaultProfile qt
    - name: Setup Qbs
      run: |
        echo Qt5_DIR: $Qt5_Dir
        la -lah qt5dir
        la -lah qt5dir/bin
        la -lah $Qt5_Dir
        la -lah $Qt5_Dir/bin
        $QBS_DIR/bin/qbs --version 
        $QBS_DIR/bin/qbs setup-qt $Qt5_Dir/bin/qmake.exe vangers
        $QBS_DIR/bin/qbs config defaultProfile vangers
        $QBS_DIR/bin/qbs setup-toolchains --detect
    - name: Build VangersUtils
      run: |
        $QBS_DIR/bin/qbs install --install-root VangersUtils config:release qbs.debugInformation:true modules.cpp.separateDebugInformation:true
        ls -lah        
    # - name: Build VangersUtils
    #   run: |
    #     qbs build --all-products config:release

    - name: Run windeployqt
      run: |
        PATH="$PATH:$MINGW_PATH" $Qt5_DIR/windeployqt.exe release/install-root/bin/vangers-utils-qt.exe
        cp $MINGW_PATH/libgcc_s*.dll release/install-root/bin
        cp $MINGW_PATH/libstdc++*.dll release/install-root/bin
        cp $MINGW_PATH/libwinpthread*.dll release/install-root/bin
        
    # - name: Upload VangersUtils archive
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: VangersUtils-${{ needs.version.outputs.version }}-win${{ matrix.arch }}
    #     path: release/install-root/bin/*

    - uses: vimtor/action-zip@v1
      with:
        files: release/install-root/bin/
        dest: VangersUtils-${{ needs.version.outputs.version }}-win${{ matrix.arch }}.zip

    - name: Upload to release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: VangersUtils-${{ needs.version.outputs.version }}-win${{ matrix.arch }}.zip 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
